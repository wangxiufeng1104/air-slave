; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\tim.o --asm_dir=.\air_slave\ --list_dir=.\air_slave\ --depend=.\tim.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy -I../Drivers/CMSIS/Device/ST/STM32F1xx/Include -I../Drivers/CMSIS/Include -I.\RTE\_air_slave -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=525 -D_RTE_ -DSTM32F10X_MD -DUSE_HAL_DRIVER -DSTM32F103xB --omf_browse=.\tim.crf ../Src/tim.c]
                          THUMB

                          AREA ||i.HAL_TIM_Base_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_Base_MspDeInit PROC
;;;179    
;;;180    void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
000000  6800              LDR      r0,[r0,#0]
;;;181    {
;;;182    
;;;183      if(tim_baseHandle->Instance==TIM1)
000002  4906              LDR      r1,|L1.28|
000004  4288              CMP      r0,r1
000006  d107              BNE      |L1.24|
;;;184      {
;;;185      /* USER CODE BEGIN TIM1_MspDeInit 0 */
;;;186    
;;;187      /* USER CODE END TIM1_MspDeInit 0 */
;;;188        /* Peripheral clock disable */
;;;189        __HAL_RCC_TIM1_CLK_DISABLE();
000008  4805              LDR      r0,|L1.32|
00000a  6981              LDR      r1,[r0,#0x18]
00000c  f4216100          BIC      r1,r1,#0x800
000010  6181              STR      r1,[r0,#0x18]
;;;190    
;;;191        /* TIM1 interrupt Deinit */
;;;192        HAL_NVIC_DisableIRQ(TIM1_UP_IRQn);
000012  2019              MOVS     r0,#0x19
000014  f7ffbffe          B.W      HAL_NVIC_DisableIRQ
                  |L1.24|
;;;193      /* USER CODE BEGIN TIM1_MspDeInit 1 */
;;;194    
;;;195      /* USER CODE END TIM1_MspDeInit 1 */
;;;196      }
;;;197    }
000018  4770              BX       lr
;;;198    
                          ENDP

00001a  0000              DCW      0x0000
                  |L1.28|
                          DCD      0x40012c00
                  |L1.32|
                          DCD      0x40021000

                          AREA ||i.HAL_TIM_Base_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_Base_MspInit PROC
;;;119    
;;;120    void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
000000  b508              PUSH     {r3,lr}
;;;121    {
;;;122    
;;;123      if(tim_baseHandle->Instance==TIM1)
000002  6800              LDR      r0,[r0,#0]
000004  490b              LDR      r1,|L2.52|
000006  4288              CMP      r0,r1
000008  d112              BNE      |L2.48|
;;;124      {
;;;125      /* USER CODE BEGIN TIM1_MspInit 0 */
;;;126    
;;;127      /* USER CODE END TIM1_MspInit 0 */
;;;128        /* TIM1 clock enable */
;;;129        __HAL_RCC_TIM1_CLK_ENABLE();
00000a  480b              LDR      r0,|L2.56|
00000c  6981              LDR      r1,[r0,#0x18]
00000e  f4416100          ORR      r1,r1,#0x800
000012  6181              STR      r1,[r0,#0x18]
000014  6980              LDR      r0,[r0,#0x18]
;;;130    
;;;131        /* TIM1 interrupt Init */
;;;132        HAL_NVIC_SetPriority(TIM1_UP_IRQn, 1, 0);
000016  2200              MOVS     r2,#0
000018  f4006000          AND      r0,r0,#0x800          ;129
00001c  9000              STR      r0,[sp,#0]
00001e  2101              MOVS     r1,#1
000020  2019              MOVS     r0,#0x19
000022  f7fffffe          BL       HAL_NVIC_SetPriority
;;;133        HAL_NVIC_EnableIRQ(TIM1_UP_IRQn);
000026  e8bd4008          POP      {r3,lr}
00002a  2019              MOVS     r0,#0x19
00002c  f7ffbffe          B.W      HAL_NVIC_EnableIRQ
                  |L2.48|
;;;134      /* USER CODE BEGIN TIM1_MspInit 1 */
;;;135    
;;;136      /* USER CODE END TIM1_MspInit 1 */
;;;137      }
;;;138    }
000030  bd08              POP      {r3,pc}
;;;139    
                          ENDP

000032  0000              DCW      0x0000
                  |L2.52|
                          DCD      0x40012c00
                  |L2.56|
                          DCD      0x40021000

                          AREA ||i.HAL_TIM_MspPostInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_MspPostInit PROC
;;;154    }
;;;155    void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
000000  b51f              PUSH     {r0-r4,lr}
;;;156    {
;;;157    
;;;158      GPIO_InitTypeDef GPIO_InitStruct;
;;;159      if(timHandle->Instance==TIM2)
000002  6800              LDR      r0,[r0,#0]
000004  f1b04f80          CMP      r0,#0x40000000
000008  d109              BNE      |L3.30|
;;;160      {
;;;161      /* USER CODE BEGIN TIM2_MspPostInit 0 */
;;;162    
;;;163      /* USER CODE END TIM2_MspPostInit 0 */
;;;164      
;;;165        /**TIM2 GPIO Configuration    
;;;166        PA0-WKUP     ------> TIM2_CH1 
;;;167        */
;;;168        GPIO_InitStruct.Pin = PWM_OUT_Pin;
00000a  2001              MOVS     r0,#1
;;;169        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
00000c  9000              STR      r0,[sp,#0]
00000e  2002              MOVS     r0,#2
;;;170        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
000010  9001              STR      r0,[sp,#4]
000012  2003              MOVS     r0,#3
;;;171        HAL_GPIO_Init(PWM_OUT_GPIO_Port, &GPIO_InitStruct);
000014  9003              STR      r0,[sp,#0xc]
000016  4669              MOV      r1,sp
000018  4801              LDR      r0,|L3.32|
00001a  f7fffffe          BL       HAL_GPIO_Init
                  |L3.30|
;;;172    
;;;173      /* USER CODE BEGIN TIM2_MspPostInit 1 */
;;;174    
;;;175      /* USER CODE END TIM2_MspPostInit 1 */
;;;176      }
;;;177    
;;;178    }
00001e  bd1f              POP      {r0-r4,pc}
;;;179    
                          ENDP

                  |L3.32|
                          DCD      0x40010800

                          AREA ||i.HAL_TIM_PWM_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_PWM_MspDeInit PROC
;;;198    
;;;199    void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)
000000  6800              LDR      r0,[r0,#0]
;;;200    {
;;;201    
;;;202      if(tim_pwmHandle->Instance==TIM2)
000002  f1b04f80          CMP      r0,#0x40000000
000006  d104              BNE      |L4.18|
;;;203      {
;;;204      /* USER CODE BEGIN TIM2_MspDeInit 0 */
;;;205    
;;;206      /* USER CODE END TIM2_MspDeInit 0 */
;;;207        /* Peripheral clock disable */
;;;208        __HAL_RCC_TIM2_CLK_DISABLE();
000008  4802              LDR      r0,|L4.20|
00000a  69c1              LDR      r1,[r0,#0x1c]
00000c  f0210101          BIC      r1,r1,#1
000010  61c1              STR      r1,[r0,#0x1c]
                  |L4.18|
;;;209      /* USER CODE BEGIN TIM2_MspDeInit 1 */
;;;210    
;;;211      /* USER CODE END TIM2_MspDeInit 1 */
;;;212      }
;;;213    } 
000012  4770              BX       lr
;;;214    
                          ENDP

                  |L4.20|
                          DCD      0x40021000

                          AREA ||i.HAL_TIM_PWM_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_PWM_MspInit PROC
;;;139    
;;;140    void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
000000  b508              PUSH     {r3,lr}
;;;141    {
;;;142    
;;;143      if(tim_pwmHandle->Instance==TIM2)
000002  6800              LDR      r0,[r0,#0]
000004  f1b04f80          CMP      r0,#0x40000000
000008  d108              BNE      |L5.28|
;;;144      {
;;;145      /* USER CODE BEGIN TIM2_MspInit 0 */
;;;146    
;;;147      /* USER CODE END TIM2_MspInit 0 */
;;;148        /* TIM2 clock enable */
;;;149        __HAL_RCC_TIM2_CLK_ENABLE();
00000a  4805              LDR      r0,|L5.32|
00000c  69c1              LDR      r1,[r0,#0x1c]
00000e  f0410101          ORR      r1,r1,#1
000012  61c1              STR      r1,[r0,#0x1c]
000014  69c0              LDR      r0,[r0,#0x1c]
000016  f0000001          AND      r0,r0,#1
00001a  9000              STR      r0,[sp,#0]
                  |L5.28|
;;;150      /* USER CODE BEGIN TIM2_MspInit 1 */
;;;151    
;;;152      /* USER CODE END TIM2_MspInit 1 */
;;;153      }
;;;154    }
00001c  bd08              POP      {r3,pc}
;;;155    void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
                          ENDP

00001e  0000              DCW      0x0000
                  |L5.32|
                          DCD      0x40021000

                          AREA ||i.HAL_TIM_PeriodElapsedCallback||, CODE, READONLY, ALIGN=2

                  HAL_TIM_PeriodElapsedCallback PROC
;;;215    /* USER CODE BEGIN 1 */
;;;216    void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
000000  4908              LDR      r1,|L6.36|
;;;217    {
;;;218    	static uint16_t st;
;;;219    	if(htim->Instance == htim1.Instance)
000002  6800              LDR      r0,[r0,#0]
000004  6809              LDR      r1,[r1,#0]  ; htim1
000006  4288              CMP      r0,r1
000008  d10b              BNE      |L6.34|
;;;220    	{
;;;221    		st++;
00000a  4807              LDR      r0,|L6.40|
00000c  8801              LDRH     r1,[r0,#0]  ; st
00000e  1c49              ADDS     r1,r1,#1
000010  b289              UXTH     r1,r1
000012  8001              STRH     r1,[r0,#0]
;;;222    		
;;;223    		if(st == 10)
000014  290a              CMP      r1,#0xa
000016  d104              BNE      |L6.34|
;;;224    		{
;;;225    			st = 0;
000018  2100              MOVS     r1,#0
00001a  8001              STRH     r1,[r0,#0]
;;;226    			
;;;227    			HAL_IWDG_Refresh(&hiwdg);
00001c  4803              LDR      r0,|L6.44|
00001e  f7ffbffe          B.W      HAL_IWDG_Refresh
                  |L6.34|
;;;228    		}
;;;229    	}
;;;230    }
000022  4770              BX       lr
;;;231    /* USER CODE END 1 */
                          ENDP

                  |L6.36|
                          DCD      ||.bss||
                  |L6.40|
                          DCD      ||.data||
                  |L6.44|
                          DCD      hiwdg

                          AREA ||i.MX_TIM1_Init||, CODE, READONLY, ALIGN=2

                  MX_TIM1_Init PROC
;;;51     /* TIM1 init function */
;;;52     void MX_TIM1_Init(void)
000000  b510              PUSH     {r4,lr}
;;;53     {
;;;54       TIM_ClockConfigTypeDef sClockSourceConfig;
;;;55       TIM_MasterConfigTypeDef sMasterConfig;
;;;56     
;;;57       htim1.Instance = TIM1;
000002  4818              LDR      r0,|L7.100|
000004  b086              SUB      sp,sp,#0x18           ;53
000006  4916              LDR      r1,|L7.96|
;;;58       htim1.Init.Prescaler = 64-1;
000008  6001              STR      r1,[r0,#0]  ; htim1
00000a  213f              MOVS     r1,#0x3f
;;;59       htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
00000c  2400              MOVS     r4,#0
00000e  e9c01401          STRD     r1,r4,[r0,#4]
;;;60       htim1.Init.Period = 10000-1;
000012  f242710f          MOV      r1,#0x270f
000016  e9c01403          STRD     r1,r4,[r0,#0xc]
;;;61       htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
;;;62       htim1.Init.RepetitionCounter = 0;
;;;63       htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
00001a  6144              STR      r4,[r0,#0x14]  ; htim1
;;;64       if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
00001c  6184              STR      r4,[r0,#0x18]  ; htim1
00001e  f7fffffe          BL       HAL_TIM_Base_Init
000022  b118              CBZ      r0,|L7.44|
;;;65       {
;;;66         _Error_Handler(__FILE__, __LINE__);
000024  2142              MOVS     r1,#0x42
000026  a010              ADR      r0,|L7.104|
000028  f7fffffe          BL       _Error_Handler
                  |L7.44|
;;;67       }
;;;68     
;;;69       sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
00002c  f44f5080          MOV      r0,#0x1000
;;;70       if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
000030  9000              STR      r0,[sp,#0]
000032  4669              MOV      r1,sp
000034  480b              LDR      r0,|L7.100|
000036  f7fffffe          BL       HAL_TIM_ConfigClockSource
00003a  b118              CBZ      r0,|L7.68|
;;;71       {
;;;72         _Error_Handler(__FILE__, __LINE__);
00003c  2148              MOVS     r1,#0x48
00003e  a00a              ADR      r0,|L7.104|
000040  f7fffffe          BL       _Error_Handler
                  |L7.68|
;;;73       }
;;;74     
;;;75       sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
;;;76       sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
000044  9404              STR      r4,[sp,#0x10]
;;;77       if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
000046  a904              ADD      r1,sp,#0x10
000048  4806              LDR      r0,|L7.100|
00004a  9405              STR      r4,[sp,#0x14]
00004c  f7fffffe          BL       HAL_TIMEx_MasterConfigSynchronization
000050  2800              CMP      r0,#0
000052  d003              BEQ      |L7.92|
;;;78       {
;;;79         _Error_Handler(__FILE__, __LINE__);
000054  214f              MOVS     r1,#0x4f
000056  a004              ADR      r0,|L7.104|
000058  f7fffffe          BL       _Error_Handler
                  |L7.92|
;;;80       }
;;;81     
;;;82     }
00005c  b006              ADD      sp,sp,#0x18
00005e  bd10              POP      {r4,pc}
;;;83     /* TIM2 init function */
                          ENDP

                  |L7.96|
                          DCD      0x40012c00
                  |L7.100|
                          DCD      ||.bss||
                  |L7.104|
000068  2e2e2f53          DCB      "../Src/tim.c",0
00006c  72632f74
000070  696d2e63
000074  00      
000075  00                DCB      0
000076  00                DCB      0
000077  00                DCB      0

                          AREA ||i.MX_TIM2_Init||, CODE, READONLY, ALIGN=2

                  MX_TIM2_Init PROC
;;;83     /* TIM2 init function */
;;;84     void MX_TIM2_Init(void)
000000  b510              PUSH     {r4,lr}
;;;85     {
;;;86       TIM_MasterConfigTypeDef sMasterConfig;
;;;87       TIM_OC_InitTypeDef sConfigOC;
;;;88     
;;;89       htim2.Instance = TIM2;
000002  481a              LDR      r0,|L8.108|
000004  b08a              SUB      sp,sp,#0x28           ;85
000006  f04f4180          MOV      r1,#0x40000000
;;;90       htim2.Init.Prescaler = 64-1;
00000a  6001              STR      r1,[r0,#0]  ; htim2
00000c  213f              MOVS     r1,#0x3f
;;;91       htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
00000e  2400              MOVS     r4,#0
000010  e9c01401          STRD     r1,r4,[r0,#4]
;;;92       htim2.Init.Period = 1000;
000014  f44f717a          MOV      r1,#0x3e8
000018  e9c01403          STRD     r1,r4,[r0,#0xc]
;;;93       htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
;;;94       htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
;;;95       if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
00001c  6184              STR      r4,[r0,#0x18]  ; htim2
00001e  f7fffffe          BL       HAL_TIM_PWM_Init
000022  b118              CBZ      r0,|L8.44|
;;;96       {
;;;97         _Error_Handler(__FILE__, __LINE__);
000024  2161              MOVS     r1,#0x61
000026  a012              ADR      r0,|L8.112|
000028  f7fffffe          BL       _Error_Handler
                  |L8.44|
;;;98       }
;;;99     
;;;100      sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
;;;101      sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
00002c  9407              STR      r4,[sp,#0x1c]
;;;102      if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
00002e  a907              ADD      r1,sp,#0x1c
000030  480e              LDR      r0,|L8.108|
000032  9408              STR      r4,[sp,#0x20]
000034  f7fffffe          BL       HAL_TIMEx_MasterConfigSynchronization
000038  b118              CBZ      r0,|L8.66|
;;;103      {
;;;104        _Error_Handler(__FILE__, __LINE__);
00003a  2168              MOVS     r1,#0x68
00003c  a00c              ADR      r0,|L8.112|
00003e  f7fffffe          BL       _Error_Handler
                  |L8.66|
;;;105      }
;;;106    
;;;107      sConfigOC.OCMode = TIM_OCMODE_PWM1;
000042  2060              MOVS     r0,#0x60
000044  e9cd0400          STRD     r0,r4,[sp,#0]
;;;108      sConfigOC.Pulse = 0;
;;;109      sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
;;;110      sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
000048  9402              STR      r4,[sp,#8]
;;;111      if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
00004a  2200              MOVS     r2,#0
00004c  4669              MOV      r1,sp
00004e  4807              LDR      r0,|L8.108|
000050  9404              STR      r4,[sp,#0x10]
000052  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
000056  b118              CBZ      r0,|L8.96|
;;;112      {
;;;113        _Error_Handler(__FILE__, __LINE__);
000058  2171              MOVS     r1,#0x71
00005a  a005              ADR      r0,|L8.112|
00005c  f7fffffe          BL       _Error_Handler
                  |L8.96|
;;;114      }
;;;115    
;;;116      HAL_TIM_MspPostInit(&htim2);
000060  4802              LDR      r0,|L8.108|
000062  f7fffffe          BL       HAL_TIM_MspPostInit
;;;117    
;;;118    }
000066  b00a              ADD      sp,sp,#0x28
000068  bd10              POP      {r4,pc}
;;;119    
                          ENDP

00006a  0000              DCW      0x0000
                  |L8.108|
                          DCD      ||.bss||+0x40
                  |L8.112|
000070  2e2e2f53          DCB      "../Src/tim.c",0
000074  72632f74
000078  696d2e63
00007c  00      
00007d  00                DCB      0
00007e  00                DCB      0
00007f  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  htim1
                          %        64
                  htim2
                          %        64

                          AREA ||.data||, DATA, ALIGN=1

                  ||st||
000000  0000              DCB      0x00,0x00

;*** Start embedded assembler ***

#line 1 "../Src/tim.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_tim_c_51ac5494____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___5_tim_c_51ac5494____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_tim_c_51ac5494____REVSH|
#line 402
|__asm___5_tim_c_51ac5494____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_tim_c_51ac5494____RRX|
#line 587
|__asm___5_tim_c_51ac5494____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
