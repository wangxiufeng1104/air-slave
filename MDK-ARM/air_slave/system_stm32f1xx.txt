; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\system_stm32f1xx.o --asm_dir=.\air_slave\ --list_dir=.\air_slave\ --depend=.\system_stm32f1xx.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy -I../Drivers/CMSIS/Device/ST/STM32F1xx/Include -I../Drivers/CMSIS/Include -I.\RTE\_air_slave -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=525 -D_RTE_ -DSTM32F10X_MD -DUSE_HAL_DRIVER -DSTM32F103xB --omf_browse=.\system_stm32f1xx.crf ..//Src/system_stm32f1xx.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;264      */
;;;265    void SystemCoreClockUpdate (void)
000000  4914              LDR      r1,|L1.84|
;;;266    {
000002  b510              PUSH     {r4,lr}
;;;267      uint32_t tmp = 0U, pllmull = 0U, pllsource = 0U;
;;;268    
;;;269    #if defined(STM32F105xC) || defined(STM32F107xC)
;;;270      uint32_t prediv1source = 0U, prediv1factor = 0U, prediv2factor = 0U, pll2mull = 0U;
;;;271    #endif /* STM32F105xC */
;;;272    
;;;273    #if defined(STM32F100xB) || defined(STM32F100xE)
;;;274      uint32_t prediv1factor = 0U;
;;;275    #endif /* STM32F100xB or STM32F100xE */
;;;276        
;;;277      /* Get SYSCLK source -------------------------------------------------------*/
;;;278      tmp = RCC->CFGR & RCC_CFGR_SWS;
000004  6848              LDR      r0,[r1,#4]
;;;279      
;;;280      switch (tmp)
;;;281      {
;;;282        case 0x00U:  /* HSI used as system clock */
;;;283          SystemCoreClock = HSI_VALUE;
000006  4a14              LDR      r2,|L1.88|
000008  f010030c          ANDS     r3,r0,#0xc            ;278
00000c  4813              LDR      r0,|L1.92|
00000e  d003              BEQ      |L1.24|
000010  2b04              CMP      r3,#4                 ;280
000012  d001              BEQ      |L1.24|
000014  2b08              CMP      r3,#8                 ;280
000016  d009              BEQ      |L1.44|
                  |L1.24|
;;;284          break;
;;;285        case 0x04U:  /* HSE used as system clock */
;;;286          SystemCoreClock = HSE_VALUE;
;;;287          break;
;;;288        case 0x08U:  /* PLL used as system clock */
;;;289    
;;;290          /* Get PLL clock source and multiplication factor ----------------------*/
;;;291          pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
;;;292          pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
;;;293          
;;;294    #if !defined(STM32F105xC) && !defined(STM32F107xC)      
;;;295          pllmull = ( pllmull >> 18U) + 2U;
;;;296          
;;;297          if (pllsource == 0x00U)
;;;298          {
;;;299            /* HSI oscillator clock divided by 2 selected as PLL clock entry */
;;;300            SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
;;;301          }
;;;302          else
;;;303          {
;;;304     #if defined(STM32F100xB) || defined(STM32F100xE)
;;;305           prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
;;;306           /* HSE oscillator clock selected as PREDIV1 clock entry */
;;;307           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
;;;308     #else
;;;309            /* HSE selected as PLL clock entry */
;;;310            if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
;;;311            {/* HSE oscillator clock divided by 2 */
;;;312              SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
;;;313            }
;;;314            else
;;;315            {
;;;316              SystemCoreClock = HSE_VALUE * pllmull;
;;;317            }
;;;318     #endif
;;;319          }
;;;320    #else
;;;321          pllmull = pllmull >> 18U;
;;;322          
;;;323          if (pllmull != 0x0DU)
;;;324          {
;;;325             pllmull += 2U;
;;;326          }
;;;327          else
;;;328          { /* PLL multiplication factor = PLL input clock * 6.5 */
;;;329            pllmull = 13U / 2U; 
;;;330          }
;;;331                
;;;332          if (pllsource == 0x00U)
;;;333          {
;;;334            /* HSI oscillator clock divided by 2 selected as PLL clock entry */
;;;335            SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
;;;336          }
;;;337          else
;;;338          {/* PREDIV1 selected as PLL clock entry */
;;;339            
;;;340            /* Get PREDIV1 clock source and division factor */
;;;341            prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
;;;342            prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
;;;343            
;;;344            if (prediv1source == 0U)
;;;345            { 
;;;346              /* HSE oscillator clock selected as PREDIV1 clock entry */
;;;347              SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
;;;348            }
;;;349            else
;;;350            {/* PLL2 clock selected as PREDIV1 clock entry */
;;;351              
;;;352              /* Get PREDIV2 division factor and PLL2 multiplication factor */
;;;353              prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4U) + 1U;
;;;354              pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8U) + 2U; 
;;;355              SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;                         
;;;356            }
;;;357          }
;;;358    #endif /* STM32F105xC */ 
;;;359          break;
;;;360    
;;;361        default:
;;;362          SystemCoreClock = HSI_VALUE;
;;;363          break;
;;;364      }
;;;365      
;;;366      /* Compute HCLK clock frequency ----------------*/
;;;367      /* Get HCLK prescaler */
;;;368      tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
000018  6002              STR      r2,[r0,#0]  ; SystemCoreClock
00001a  6849              LDR      r1,[r1,#4]
00001c  4a10              LDR      r2,|L1.96|
00001e  f3c11103          UBFX     r1,r1,#4,#4
000022  5c51              LDRB     r1,[r2,r1]
;;;369      /* HCLK clock frequency */
;;;370      SystemCoreClock >>= tmp;  
000024  6802              LDR      r2,[r0,#0]  ; SystemCoreClock
000026  40ca              LSRS     r2,r2,r1
000028  6002              STR      r2,[r0,#0]  ; SystemCoreClock
;;;371    }
00002a  bd10              POP      {r4,pc}
                  |L1.44|
00002c  684a              LDR      r2,[r1,#4]            ;291
00002e  684b              LDR      r3,[r1,#4]            ;292
000030  f4021270          AND      r2,r2,#0x3c0000       ;291
000034  f04f0402          MOV      r4,#2                 ;295
000038  f4133f80          TST      r3,#0x10000           ;292
00003c  eb044292          ADD      r2,r4,r2,LSR #18      ;295
000040  d002              BEQ      |L1.72|
000042  684b              LDR      r3,[r1,#4]            ;310
000044  039b              LSLS     r3,r3,#14             ;310
000046  d501              BPL      |L1.76|
                  |L1.72|
000048  4b06              LDR      r3,|L1.100|
00004a  e000              B        |L1.78|
                  |L1.76|
00004c  4b02              LDR      r3,|L1.88|
                  |L1.78|
00004e  435a              MULS     r2,r3,r2              ;312
000050  e7e2              B        |L1.24|
;;;372    
                          ENDP

000052  0000              DCW      0x0000
                  |L1.84|
                          DCD      0x40021000
                  |L1.88|
                          DCD      0x007a1200
                  |L1.92|
                          DCD      ||.data||
                  |L1.96|
                          DCD      ||.constdata||
                  |L1.100|
                          DCD      0x003d0900

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;174      */
;;;175    void SystemInit (void)
000000  480d              LDR      r0,|L2.56|
;;;176    {
;;;177      /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
;;;178      /* Set HSION bit */
;;;179      RCC->CR |= 0x00000001U;
000002  6801              LDR      r1,[r0,#0]
000004  f0410101          ORR      r1,r1,#1
000008  6001              STR      r1,[r0,#0]
;;;180    
;;;181      /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
;;;182    #if !defined(STM32F105xC) && !defined(STM32F107xC)
;;;183      RCC->CFGR &= 0xF8FF0000U;
00000a  6841              LDR      r1,[r0,#4]
00000c  4a0b              LDR      r2,|L2.60|
00000e  4011              ANDS     r1,r1,r2
000010  6041              STR      r1,[r0,#4]
;;;184    #else
;;;185      RCC->CFGR &= 0xF0FF0000U;
;;;186    #endif /* STM32F105xC */   
;;;187      
;;;188      /* Reset HSEON, CSSON and PLLON bits */
;;;189      RCC->CR &= 0xFEF6FFFFU;
000012  6801              LDR      r1,[r0,#0]
000014  4a0a              LDR      r2,|L2.64|
000016  4011              ANDS     r1,r1,r2
000018  6001              STR      r1,[r0,#0]
;;;190    
;;;191      /* Reset HSEBYP bit */
;;;192      RCC->CR &= 0xFFFBFFFFU;
00001a  6801              LDR      r1,[r0,#0]
00001c  f4212180          BIC      r1,r1,#0x40000
000020  6001              STR      r1,[r0,#0]
;;;193    
;;;194      /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
;;;195      RCC->CFGR &= 0xFF80FFFFU;
000022  6841              LDR      r1,[r0,#4]
000024  f42101fe          BIC      r1,r1,#0x7f0000
000028  6041              STR      r1,[r0,#4]
;;;196    
;;;197    #if defined(STM32F105xC) || defined(STM32F107xC)
;;;198      /* Reset PLL2ON and PLL3ON bits */
;;;199      RCC->CR &= 0xEBFFFFFFU;
;;;200    
;;;201      /* Disable all interrupts and clear pending bits  */
;;;202      RCC->CIR = 0x00FF0000U;
;;;203    
;;;204      /* Reset CFGR2 register */
;;;205      RCC->CFGR2 = 0x00000000U;
;;;206    #elif defined(STM32F100xB) || defined(STM32F100xE)
;;;207      /* Disable all interrupts and clear pending bits  */
;;;208      RCC->CIR = 0x009F0000U;
;;;209    
;;;210      /* Reset CFGR2 register */
;;;211      RCC->CFGR2 = 0x00000000U;      
;;;212    #else
;;;213      /* Disable all interrupts and clear pending bits  */
;;;214      RCC->CIR = 0x009F0000U;
00002a  f44f011f          MOV      r1,#0x9f0000
00002e  6081              STR      r1,[r0,#8]
;;;215    #endif /* STM32F105xC */
;;;216        
;;;217    #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) || defined(STM32F103xG)
;;;218      #ifdef DATA_IN_ExtSRAM
;;;219        SystemInit_ExtMemCtl(); 
;;;220      #endif /* DATA_IN_ExtSRAM */
;;;221    #endif 
;;;222    
;;;223    #ifdef VECT_TAB_SRAM
;;;224      SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
;;;225    #else
;;;226      SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
000030  4904              LDR      r1,|L2.68|
000032  03c0              LSLS     r0,r0,#15
000034  6008              STR      r0,[r1,#0]
;;;227    #endif 
;;;228    }
000036  4770              BX       lr
;;;229    
                          ENDP

                  |L2.56|
                          DCD      0x40021000
                  |L2.60|
                          DCD      0xf8ff0000
                  |L2.64|
                          DCD      0xfef6ffff
                  |L2.68|
                          DCD      0xe000ed08

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  AHBPrescTable
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  01020304          DCB      0x01,0x02,0x03,0x04
00000c  06070809          DCB      0x06,0x07,0x08,0x09

                          AREA ||area_number.6||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.6||, ||.constdata||
                  APBPrescTable
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  01020304          DCB      0x01,0x02,0x03,0x04

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x044aa200

;*** Start embedded assembler ***

#line 1 "..//Src/system_stm32f1xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f1xx_c_5d646a67____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___18_system_stm32f1xx_c_5d646a67____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f1xx_c_5d646a67____REVSH|
#line 402
|__asm___18_system_stm32f1xx_c_5d646a67____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f1xx_c_5d646a67____RRX|
#line 587
|__asm___18_system_stm32f1xx_c_5d646a67____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
