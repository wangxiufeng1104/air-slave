; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\stm32f1xx_it.o --asm_dir=.\air_slave\ --list_dir=.\air_slave\ --depend=.\stm32f1xx_it.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy -I../Drivers/CMSIS/Device/ST/STM32F1xx/Include -I../Drivers/CMSIS/Include -I.\RTE\_air_slave -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=525 -D_RTE_ -DSTM32F10X_MD -DUSE_HAL_DRIVER -DSTM32F103xB --omf_browse=.\stm32f1xx_it.crf ../Src/stm32f1xx_it.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
                  |L1.0|
;;;106    */
;;;107    void BusFault_Handler(void)
000000  e7fe              B        |L1.0|
;;;108    {
;;;109      /* USER CODE BEGIN BusFault_IRQn 0 */
;;;110    
;;;111      /* USER CODE END BusFault_IRQn 0 */
;;;112      while (1)
;;;113      {
;;;114        /* USER CODE BEGIN W1_BusFault_IRQn 0 */
;;;115        /* USER CODE END W1_BusFault_IRQn 0 */
;;;116      }
;;;117      /* USER CODE BEGIN BusFault_IRQn 1 */
;;;118    
;;;119      /* USER CODE END BusFault_IRQn 1 */
;;;120    }
;;;121    
                          ENDP


                          AREA ||i.DMA1_Channel2_IRQHandler||, CODE, READONLY, ALIGN=2

                  DMA1_Channel2_IRQHandler PROC
;;;203    */
;;;204    void DMA1_Channel2_IRQHandler(void)
000000  4801              LDR      r0,|L2.8|
;;;205    {
;;;206      /* USER CODE BEGIN DMA1_Channel2_IRQn 0 */
;;;207    
;;;208      /* USER CODE END DMA1_Channel2_IRQn 0 */
;;;209      HAL_DMA_IRQHandler(&hdma_usart3_tx);
000002  f7ffbffe          B.W      HAL_DMA_IRQHandler
;;;210      /* USER CODE BEGIN DMA1_Channel2_IRQn 1 */
;;;211    
;;;212      /* USER CODE END DMA1_Channel2_IRQn 1 */
;;;213    }
;;;214    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      hdma_usart3_tx

                          AREA ||i.DMA1_Channel3_IRQHandler||, CODE, READONLY, ALIGN=2

                  DMA1_Channel3_IRQHandler PROC
;;;217    */
;;;218    void DMA1_Channel3_IRQHandler(void)
000000  4801              LDR      r0,|L3.8|
;;;219    {
;;;220      /* USER CODE BEGIN DMA1_Channel3_IRQn 0 */
;;;221    
;;;222      /* USER CODE END DMA1_Channel3_IRQn 0 */
;;;223      HAL_DMA_IRQHandler(&hdma_usart3_rx);
000002  f7ffbffe          B.W      HAL_DMA_IRQHandler
;;;224      /* USER CODE BEGIN DMA1_Channel3_IRQn 1 */
;;;225    
;;;226      /* USER CODE END DMA1_Channel3_IRQn 1 */
;;;227    }
;;;228    
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      hdma_usart3_rx

                          AREA ||i.DMA1_Channel4_IRQHandler||, CODE, READONLY, ALIGN=2

                  DMA1_Channel4_IRQHandler PROC
;;;231    */
;;;232    void DMA1_Channel4_IRQHandler(void)
000000  4801              LDR      r0,|L4.8|
;;;233    {
;;;234      /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */
;;;235    
;;;236      /* USER CODE END DMA1_Channel4_IRQn 0 */
;;;237      HAL_DMA_IRQHandler(&hdma_usart1_tx);
000002  f7ffbffe          B.W      HAL_DMA_IRQHandler
;;;238      /* USER CODE BEGIN DMA1_Channel4_IRQn 1 */
;;;239    
;;;240      /* USER CODE END DMA1_Channel4_IRQn 1 */
;;;241    }
;;;242    
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      hdma_usart1_tx

                          AREA ||i.DMA1_Channel5_IRQHandler||, CODE, READONLY, ALIGN=2

                  DMA1_Channel5_IRQHandler PROC
;;;245    */
;;;246    void DMA1_Channel5_IRQHandler(void)
000000  4801              LDR      r0,|L5.8|
;;;247    {
;;;248      /* USER CODE BEGIN DMA1_Channel5_IRQn 0 */
;;;249    
;;;250      /* USER CODE END DMA1_Channel5_IRQn 0 */
;;;251      HAL_DMA_IRQHandler(&hdma_usart1_rx);
000002  f7ffbffe          B.W      HAL_DMA_IRQHandler
;;;252      /* USER CODE BEGIN DMA1_Channel5_IRQn 1 */
;;;253    
;;;254      /* USER CODE END DMA1_Channel5_IRQn 1 */
;;;255    }
;;;256    
                          ENDP

000006  0000              DCW      0x0000
                  |L5.8|
                          DCD      hdma_usart1_rx

                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;155    */
;;;156    void DebugMon_Handler(void)
000000  4770              BX       lr
;;;157    {
;;;158      /* USER CODE BEGIN DebugMonitor_IRQn 0 */
;;;159    
;;;160      /* USER CODE END DebugMonitor_IRQn 0 */
;;;161      /* USER CODE BEGIN DebugMonitor_IRQn 1 */
;;;162    
;;;163      /* USER CODE END DebugMonitor_IRQn 1 */
;;;164    }
;;;165    
                          ENDP


                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=1

                  HardFault_Handler PROC
                  |L7.0|
;;;70     */
;;;71     void HardFault_Handler(void)
000000  e7fe              B        |L7.0|
;;;72     {
;;;73       /* USER CODE BEGIN HardFault_IRQn 0 */
;;;74     
;;;75       /* USER CODE END HardFault_IRQn 0 */
;;;76       while (1)
;;;77       {
;;;78         /* USER CODE BEGIN W1_HardFault_IRQn 0 */
;;;79         /* USER CODE END W1_HardFault_IRQn 0 */
;;;80       }
;;;81       /* USER CODE BEGIN HardFault_IRQn 1 */
;;;82     
;;;83       /* USER CODE END HardFault_IRQn 1 */
;;;84     }
;;;85     
                          ENDP


                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
                  |L8.0|
;;;88     */
;;;89     void MemManage_Handler(void)
000000  e7fe              B        |L8.0|
;;;90     {
;;;91       /* USER CODE BEGIN MemoryManagement_IRQn 0 */
;;;92     
;;;93       /* USER CODE END MemoryManagement_IRQn 0 */
;;;94       while (1)
;;;95       {
;;;96         /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
;;;97         /* USER CODE END W1_MemoryManagement_IRQn 0 */
;;;98       }
;;;99       /* USER CODE BEGIN MemoryManagement_IRQn 1 */
;;;100    
;;;101      /* USER CODE END MemoryManagement_IRQn 1 */
;;;102    }
;;;103    
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;57     */
;;;58     void NMI_Handler(void)
000000  4770              BX       lr
;;;59     {
;;;60       /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
;;;61     
;;;62       /* USER CODE END NonMaskableInt_IRQn 0 */
;;;63       /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
;;;64     
;;;65       /* USER CODE END NonMaskableInt_IRQn 1 */
;;;66     }
;;;67     
                          ENDP


                          AREA ||i.PendSV_Handler||, CODE, READONLY, ALIGN=1

                  PendSV_Handler PROC
;;;168    */
;;;169    void PendSV_Handler(void)
000000  4770              BX       lr
;;;170    {
;;;171      /* USER CODE BEGIN PendSV_IRQn 0 */
;;;172    
;;;173      /* USER CODE END PendSV_IRQn 0 */
;;;174      /* USER CODE BEGIN PendSV_IRQn 1 */
;;;175    
;;;176      /* USER CODE END PendSV_IRQn 1 */
;;;177    }
;;;178    
                          ENDP


                          AREA ||i.SVC_Handler||, CODE, READONLY, ALIGN=1

                  SVC_Handler PROC
;;;142    */
;;;143    void SVC_Handler(void)
000000  4770              BX       lr
;;;144    {
;;;145      /* USER CODE BEGIN SVCall_IRQn 0 */
;;;146    
;;;147      /* USER CODE END SVCall_IRQn 0 */
;;;148      /* USER CODE BEGIN SVCall_IRQn 1 */
;;;149    
;;;150      /* USER CODE END SVCall_IRQn 1 */
;;;151    }
;;;152    
                          ENDP


                          AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=1

                  SysTick_Handler PROC
;;;181    */
;;;182    void SysTick_Handler(void)
000000  b510              PUSH     {r4,lr}
;;;183    {
;;;184      /* USER CODE BEGIN SysTick_IRQn 0 */
;;;185    
;;;186      /* USER CODE END SysTick_IRQn 0 */
;;;187      HAL_IncTick();
000002  f7fffffe          BL       HAL_IncTick
;;;188      HAL_SYSTICK_IRQHandler();
000006  e8bd4010          POP      {r4,lr}
00000a  f7ffbffe          B.W      HAL_SYSTICK_IRQHandler
;;;189      /* USER CODE BEGIN SysTick_IRQn 1 */
;;;190    
;;;191      /* USER CODE END SysTick_IRQn 1 */
;;;192    }
;;;193    
                          ENDP


                          AREA ||i.TIM1_UP_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM1_UP_IRQHandler PROC
;;;259    */
;;;260    void TIM1_UP_IRQHandler(void)
000000  4801              LDR      r0,|L13.8|
;;;261    {
;;;262      /* USER CODE BEGIN TIM1_UP_IRQn 0 */
;;;263    
;;;264      /* USER CODE END TIM1_UP_IRQn 0 */
;;;265      HAL_TIM_IRQHandler(&htim1);
000002  f7ffbffe          B.W      HAL_TIM_IRQHandler
;;;266      /* USER CODE BEGIN TIM1_UP_IRQn 1 */
;;;267    
;;;268      /* USER CODE END TIM1_UP_IRQn 1 */
;;;269    }
;;;270    
                          ENDP

000006  0000              DCW      0x0000
                  |L13.8|
                          DCD      htim1

                          AREA ||i.USART1_IRQHandler||, CODE, READONLY, ALIGN=2

                  USART1_IRQHandler PROC
;;;273    */
;;;274    void USART1_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;275    {
;;;276      /* USER CODE BEGIN USART1_IRQn 0 */
;;;277    	UsartReceive_IDLE(&huart1);
000002  4804              LDR      r0,|L14.20|
000004  f7fffffe          BL       UsartReceive_IDLE
;;;278      /* USER CODE END USART1_IRQn 0 */
;;;279      HAL_UART_IRQHandler(&huart1);
000008  e8bd4010          POP      {r4,lr}
00000c  4801              LDR      r0,|L14.20|
00000e  f7ffbffe          B.W      HAL_UART_IRQHandler
;;;280      /* USER CODE BEGIN USART1_IRQn 1 */
;;;281    
;;;282      /* USER CODE END USART1_IRQn 1 */
;;;283    }
;;;284    
                          ENDP

000012  0000              DCW      0x0000
                  |L14.20|
                          DCD      huart1

                          AREA ||i.USART3_IRQHandler||, CODE, READONLY, ALIGN=2

                  USART3_IRQHandler PROC
;;;287    */
;;;288    void USART3_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;289    {
;;;290      /* USER CODE BEGIN USART3_IRQn 0 */
;;;291    	Usart3Receive_IDLE(&huart3);
000002  4804              LDR      r0,|L15.20|
000004  f7fffffe          BL       Usart3Receive_IDLE
;;;292      /* USER CODE END USART3_IRQn 0 */
;;;293      HAL_UART_IRQHandler(&huart3);
000008  e8bd4010          POP      {r4,lr}
00000c  4801              LDR      r0,|L15.20|
00000e  f7ffbffe          B.W      HAL_UART_IRQHandler
;;;294      /* USER CODE BEGIN USART3_IRQn 1 */
;;;295    
;;;296      /* USER CODE END USART3_IRQn 1 */
;;;297    }
;;;298    
                          ENDP

000012  0000              DCW      0x0000
                  |L15.20|
                          DCD      huart3

                          AREA ||i.UsageFault_Handler||, CODE, READONLY, ALIGN=1

                  UsageFault_Handler PROC
                  |L16.0|
;;;124    */
;;;125    void UsageFault_Handler(void)
000000  e7fe              B        |L16.0|
;;;126    {
;;;127      /* USER CODE BEGIN UsageFault_IRQn 0 */
;;;128    
;;;129      /* USER CODE END UsageFault_IRQn 0 */
;;;130      while (1)
;;;131      {
;;;132        /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
;;;133        /* USER CODE END W1_UsageFault_IRQn 0 */
;;;134      }
;;;135      /* USER CODE BEGIN UsageFault_IRQn 1 */
;;;136    
;;;137      /* USER CODE END UsageFault_IRQn 1 */
;;;138    }
;;;139    
                          ENDP


;*** Start embedded assembler ***

#line 1 "../Src/stm32f1xx_it.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_stm32f1xx_it_c_bb8ca80c____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___14_stm32f1xx_it_c_bb8ca80c____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_stm32f1xx_it_c_bb8ca80c____REVSH|
#line 402
|__asm___14_stm32f1xx_it_c_bb8ca80c____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_stm32f1xx_it_c_bb8ca80c____RRX|
#line 587
|__asm___14_stm32f1xx_it_c_bb8ca80c____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
